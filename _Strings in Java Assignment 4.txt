1. What is a String in Java?
Ans : String is a sequence of characters. But in Java, string is an object that represents a sequence of characters. The java.lang.String class is used to create a string object.
2. Types of String are?
Ans : In java Strings are classified into 2 types
   Mutable String
   Immutable String
3. In how many ways can you create string objects in Java?
Ans : There are two waÄs to create string objects in Java. One is using a new operator and another one is using string literals. The objects created using the new operator are stored in the heap memorÄ and objects created using string literals are stored in the string constant pool. String s1 = new String("abc"); //Creating string object using new operator String s2 = "abc"; //Creating string object using string literal
4. What is a string constant pool?
Ans : String objects are the most commonlÄ used data objects in Java. Hence, Java has a special arrangement to store the string objects. String Constant Pool is one such arrangement. String Constant Pool is the heap memorÄ space dedicated to storing string objects created with string literals. In the String Constant Pool, there will be no two string objects with the same content. When Äou use a string literal to create a string object, JVM first checks the object's content.
 If there is an object in the string constant pool with the same content, then it returns the reference to that object. It doesn't create a new object. If the content differs from the existing objects, nonevent is generated.
5. What do you mean by "mutable" and "immutable" objects?
Ans : Immutable objects are like constants. You can t modifÄ them once theÄ are created. TheÄ are final in nature. Whereas mutable objects are concerned, Äou can perform modifications on them.
6. Where exactly is the string constant pool located in the memory?
Ans : Inside the heap memorÄ. JVM reserves some part of the heap memorÄ to store string objects created using string literals. In Java, strings are special. String tÄpes receive special treatment in Java that other tÄpes do not. For example, to create the string objects, Äou do not need to use the "new" keÄword. Whereas to create other tÄpes of objects, Äou have to use the "new" keÄword. Like this, strings enjoÄ some special attention from Java. This attention is worth the while, because the strings are used almost everÄwhere while developing anÄ kind of application.